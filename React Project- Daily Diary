Hosted: https://dairy-entry-frontend-git-main-ranbir-singhs-projects.vercel.app/


Objective:
The Daily Diary app allows users to create, view, edit, and delete diary entries. It includes features for managing diary entries, handling user authentication, and interacting with the backend for CRUD operations.
Key Features:

    Diary Entries List:
        The left side of the app displays a list of diary entries, showing only the title and createdAt timestamp for each entry.

    Diary Entry Details:
        The right side shows the detailed content of the selected diary entry, including the title, description, and creation timestamp.
        The user can edit or delete the entry from this view.

    Search and Add Entry:
        A search bar allows users to find specific diary entries based on title or content.
        An "Add Diary" button lets users create new diary entries.

    User Authentication:
        The app has login functionality with JWT-based authentication. It includes validation, error handling, and user feedback.

    Responsive UI:
        The app is designed to be responsive, ensuring it works well on both mobile and desktop devices.
        A sidebar is available on smaller screens, which can be toggled to view the list of diary entries.

    File/Image Upload:
        The app allows users to upload images along with their diary entries using Cloudinary for image storage.

    Edit and Delete Functionality:
        Users can edit or delete a diary entry, with the changes reflecting immediately in the UI.

Tech Stack:

    Frontend: React (with react-router-dom for routing), ShadCN UI, Tailwind CSS.
    Backend: Express.js, JWT for authentication, and MongoDB (using Mongoose for schema definition and CRUD operations).
    Cloud Storage: Cloudinary for image uploads.

Current Functionality:

    CRUD Operations: The app supports creating, viewing, editing, and deleting diary entries.
    User Authentication: Users can log in and access their entries securely.
    Responsive Sidebar: A mobile-friendly sidebar to view and select diary entries.

Future Enhancements:

    Persistent Data: Use a backend API to persist data and fetch entries dynamically.
    Advanced Searching: Implement more advanced search and filtering options (e.g., by date, tags, or keywords).
    Mobile App: Build a mobile version of the app for better access on-the-go.

This Daily Diary app showcases user management, data handling, and a well-designed UI to store personal entries while integrating cloud services for media uploads.

